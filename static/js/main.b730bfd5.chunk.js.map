{"version":3,"sources":["components/eventList.js","App.js","reportWebVitals.js","index.js"],"names":["EventList","useState","associationKey","setAssociationKey","startDate","setStartDate","endDate","setEndDate","eventData","setEventData","useEffect","a","axios","get","result","data","items","FormLabel","FormControl","component","Select","label","native","autoWidth","name","onChange","event","target","value","aria-label","TextField","type","Date","toISOString","InputLabelProps","shrink","Table","stickyHeader","striped","bordered","hover","TableHead","TableRow","TableCell","map","dateString","key","start_time","publishers","broadcasts","headline","subheadline","console","log","TableBody","moment","format","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"6WAoFeA,MA3Ef,WAAsB,IAAD,EACyBC,mBAAS,cADlC,mBACZC,EADY,KACIC,EADJ,OAEeF,mBAAS,IAFxB,mBAEZG,EAFY,KAEDC,EAFC,OAGWJ,mBAAS,IAHpB,mBAGZK,EAHY,KAGHC,EAHG,OAIeN,mBAAS,IAJxB,mBAIZO,EAJY,KAIDC,EAJC,KAanB,OAPAC,oBAAS,sBAAC,4BAAAC,EAAA,sEACaC,IAAMC,IAAN,4FACkEX,EADlE,yBACiGE,EADjG,eACiHE,EADjH,aADb,OACFQ,EADE,OAIRL,EAAaK,EAAOC,KAAKC,OAJjB,2CAKP,CAACd,EAAgBE,EAAWE,IAG7B,gCACE,iCACE,cAACW,EAAA,EAAD,gCACE,cAACC,EAAA,EAAD,CAAaC,UAAU,WAAvB,SACE,eAACC,EAAA,EAAD,CACEC,MAAM,WACNC,QAAM,EACNC,UAAU,OACVC,KAAK,sBACLC,SAAU,SAACC,GAAD,OAAWvB,EAAkBuB,EAAMC,OAAOC,QALtD,UAOE,wBAAQC,aAAW,OAAOD,MAAM,KAChC,wBAAQA,MAAM,aAAd,kBACA,wBAAQA,MAAM,aAAd,sBAGJ,cAACE,EAAA,EAAD,CACET,MAAM,aACNU,KAAK,iBACLN,SAAU,gBAAaG,EAAb,EAAGD,OAAUC,MAAb,OAA2BvB,EAAauB,GAAU,IAAII,KAAKJ,GAAQK,gBAC7EC,gBAAiB,CACfC,QAAQ,KAGZ,cAACL,EAAA,EAAD,CACET,MAAM,WACNU,KAAK,iBACLN,SAAU,gBAAaG,EAAb,EAAGD,OAAUC,MAAb,OAA2BrB,EAAWqB,GAAU,IAAII,KAAKJ,GAAQK,gBAC3EC,gBAAiB,CACfC,QAAQ,QAKhB,eAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,SAAO,EAACC,SAAS,OAAOC,OAAK,EAAjD,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,kBACA,cAACA,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,0BACA,cAACA,EAAA,EAAD,8BAGHnC,EAAUoC,KAAI,YAAqF,IA7D5FC,EA6DUC,EAAiF,EAAjFA,IAAKC,EAA4E,EAA5EA,WAA4E,gBAAhEC,WAAgE,sBAAjDC,WAAiD,MAAlCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,YAEzE,OADAC,QAAQC,IAAIP,EAAKC,GAEf,cAACO,EAAA,EAAD,UACE,eAACZ,EAAA,EAAD,CAAUF,OAAK,EAAf,UACE,cAACG,EAAA,EAAD,UAAYG,IACZ,cAACH,EAAA,EAAD,UAAYO,IACZ,cAACP,EAAA,EAAD,UAAYQ,IACZ,cAACR,EAAA,EAAD,WArEAE,EAqEmBE,EApE1BQ,IAAOV,GAAYW,OAAO,cA+DPV,a,MCxDbW,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0BCCRQ,EAAQC,YAAe,CAC3BC,QAAS,CACPvC,KAAM,WAIVwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAeN,MAAOA,EAAtB,UACE,cAACO,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.b730bfd5.chunk.js","sourcesContent":["import React, { useState, useEffect }from 'react';\nimport axios from 'axios';\nimport { Table, TableCell, TableRow, TableHead, TableBody, FormLabel, TextField, FormControl, Select } from '@material-ui/core';\nimport moment from 'moment';\n\nfunction format(dateString) {\n  return moment(dateString).format('LLL');\n}\n\nfunction EventList() {\n  const [associationKey, setAssociationKey] = useState('18bad24aaa');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [eventData, setEventData] = useState([]);\n\n  useEffect(async () => {\n    const result = await axios.get(\n      `https://challenge.nfhsnetwork.com/v2/search/events/upcoming?state_association_key=${associationKey}&size=50&from=${startDate}&to=${endDate}&start=0`\n    )\n    setEventData(result.data.items)\n  }, [associationKey, startDate, endDate])\n\n  return (\n    <div>\n      <form>\n        <FormLabel>State Association</FormLabel> \n          <FormControl component=\"fieldset\">\n            <Select\n              label=\"End Date\"\n              native\n              autoWidth='true'\n              name=\"stateAssociationKey\"\n              onChange={(event) => setAssociationKey(event.target.value)}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value='18bad24aaa'>GHSA</option>\n              <option value='542bc38f95'>UIL</option>\n            </Select>\n          </FormControl>\n          <TextField\n            label=\"Start Date\"\n            type=\"datetime-local\"\n            onChange={({ target: { value } }) => setStartDate(value && (new Date(value)).toISOString())}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          /> \n          <TextField\n            label=\"End Date\"\n            type=\"datetime-local\"\n            onChange={({ target: { value } }) => setEndDate(value && (new Date(value)).toISOString())}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          /> \n      </form>\n\n      <Table stickyHeader striped bordered='true' hover>\n        <TableHead>\n          <TableRow>\n            <TableCell>Key</TableCell>\n            <TableCell>Headline</TableCell>\n            <TableCell>Subheadline</TableCell>\n            <TableCell>Start Time</TableCell>\n          </TableRow>\n        </TableHead>\n        {eventData.map(({ key, start_time, publishers: [{ broadcasts: [{ headline, subheadline }] }] }) => {\n          console.log(key, start_time);\n          return (\n            <TableBody key={key}>\n              <TableRow hover>\n                <TableCell>{key}</TableCell>\n                <TableCell>{headline}</TableCell>\n                <TableCell>{subheadline}</TableCell>\n                <TableCell>{format(start_time)}</TableCell>\n              </TableRow>\n            </TableBody>\n            )\n          })}\n      </Table>\n    </div>\n  );\n}\n\nexport default EventList;","import './App.css';\nimport EventList from './components/eventList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EventList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}